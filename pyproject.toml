[project]
name = "dvars"
authors = [
    {name = "Soroosh Afyouni", email = "srafyouni@gmail.com"},
]
description = "Three-part variance decomposition of DVARS spatiotemporal rs-fMRI diagnostics yeilding units and p-values."
readme = "README.md"
requires-python = ">=3.8.0"
dynamic = ["version"]
license = {text = "BSD-3-Clause"}

dependencies = [
    "numpy",
    "nibabel",
    "matplotlib",
    "scipy",
]

classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: MIT License",
]

[project.urls]
"Bug Tracker" = "https://github.com/asoroosh/DVARS/issues"
"Documentation" = "https://github.com/asoroosh/DVARS"
"Source Code" = "https://github.com/asoroosh/DVARS"
"User support" = "https://github.com/asoroosh/DVARS/issues"

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "coverage",
    "black",
    "isort",
    "mypy",
    "pre-commit",
    "ruff",
]

[build-system]
requires = [
    "setuptools>=45",
    "wheel",
    "setuptools_scm[toml]>=6.2",
]
build-backend = "setuptools.build_meta"

[tool.mypy]
exclude = [
    "tests/",
    "matlab/",
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["dvars*"]
exclude = ["tests*", "docs*"]

[tool.pytest.ini_options]
addopts = "--cov=dvars"

[tool.black]
target-version = ['py38', 'py39', 'py310', 'py311']
skip-string-normalization = false
line-length = 120

[tool.ruff]
line-length = 120
exclude = ["__init__.py","build",".eggs"]
select = ["I", "E", "F", "TCH", "TID252"]
fix = true
ignore = ["E203","E501","E731","C901","W291","W293","E402","E722"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.mccabe]
max-complexity = 18

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.setuptools_scm]

[tool.check-manifest]
ignore = [
  "*.yaml",
]

[tool.codespell]
skip = '.git,*.pdf,*.svg'
#
# ignore-words-list = ''
